name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.5

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -o myapp-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: myapp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: myapp-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download and Upload Artifacts
        run: |
          for goos in windows linux darwin; do
            for goarch in amd64 arm64; do
              if [ "$goos" == "windows" ] && [ "$goarch" == "arm64" ]; then
                continue
              fi
              artifact=myapp-$goos-$goarch
              wget -q https://github.com/${{ github.repository }}/actions/artifacts/$artifact/zip
              unzip $artifact.zip
              echo "Uploading $artifact..."
              gh release upload ${{ github.ref }} $artifact --clobber --repo ${{ github.repository }}
            done
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
